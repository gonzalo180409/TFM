name: CI - MiniNotas

on:
  push:
    branches: [develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: devuser
          POSTGRES_PASSWORD: devpass
          POSTGRES_DB: mininotas
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U devuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: ðŸ“¥ Checkout repo
      uses: actions/checkout@v3

    - name: ðŸŸ¢ Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: ðŸ“¦ Instalar dependencias del backend
      working-directory: ./mini_notas/backend
      run: npm install

    - name: ðŸ§ª Test del backend
      working-directory: ./mini_notas/backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: devuser
        DB_PASSWORD: devpass
        DB_NAME: mininotas
        NODE_ENV: test
      run: |
        sleep 5
        PGPASSWORD=devpass psql -h localhost -U devuser -d mininotas -p 5432 -c "

        CREATE TABLE IF NOT EXISTS usuarios (
            id SERIAL PRIMARY KEY,
            email TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL
          );

          CREATE TABLE IF NOT EXISTS notas (
            id SERIAL PRIMARY KEY,
            texto TEXT NOT NULL,
            fecha TIMESTAMP DEFAULT NOW(),
            fecha_asignada DATE,
            user_id INTEGER REFERENCES usuarios(id)
          );
        "
        npm test


    - name: ðŸ“¦ Instalar dependencias del frontend
      working-directory: ./mini_notas/frontend
      run: npm install

    - name: ðŸ§ª Test del frontend
      working-directory: ./mini_notas/frontend
      run: npm test
